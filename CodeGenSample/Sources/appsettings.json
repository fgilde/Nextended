{
  "ClientUrl": "", // If client not runs with server setup client url here
  "ConnectionStrings": {
    "DefaultConnection": "Data Source=(localdb)\\mssqllocaldb;Initial Catalog=whatever;Integrated Security=True;MultipleActiveResultSets=True",
    "Ollama": "http://localhost:1234"
  },
  "PublicSettings": { // This section is also passed to client, don't store secrets, keys, passwords or usernames here
    "AssistantAvailable": true,
    "ContactAddress": "info@coworkee.de",
    "HostClientInServer": false, // This is not a setting. To change the behaviour change the setting in server.csproj
    "UserRegistration": {
      "Enabled": true,
      "RequireAddress": true,
      "RequiresAdministratorActivation": true, // if false user can login after registration and email confirmation, otherwise an admin needs to the new activate user 
      "EmailConfirmationRequired": true, // User needs to confirm his email address
      "UsernameRules": {
        "MinLength": 4,
        "UsernameCanChangedAfterRegistration": true,
        "EmailCanChangedAfterRegistration": false
      },
      "PasswordRules": {
        "MinLength": 8,
        "CapitalLetterRequired": true,
        "LowercaseLetterRequired": true,
        "NumberRequired": true
      },
      "RequireDocuments": true, // To force user to upload documents required for registration. (Example certificates or passport images)
      "RegistrationDocumentsMaxFileSize": 4000000, // Specify max file size in bytes or null or 0 to allow all sizes
      "RegistrationDocumentTypes": [ // Mime types to allow for document upload registrations (empty to allow all)
        "application/zip*",
        "application/x-zip*",
        "audio/*",
        "application/pdf",
        "application/msword",
        "application/vnd.ms-excel",
        "application/vnd.openxmlformats-officedocument.*",
        "image/*",
        "text/*"
      ],
      "AllowedEmails": [ // Pattern for allowed email addresses to register with. Use * as wildcard like "*@gmail.com". If empty all emails are allowed        
        ""
      ]
    },
    "LoginSettings": {
      "LoginMode": "Both", // Internal, External or Both"
      "AllowLoginWithUsername": true,
      "AllowedEmails": [ // Pattern for allowed email addresses to login. Use * as wildcard. If empty all emails are allowed  
        ""
      ]
    },
    "Endpoints": {
      "Dashboard": ""
    }
  },
  "AllowedHosts": "*",
  "AppConfiguration": {
    "IdHashing": {
      "Enabled": true,
      "MinLength": 10,
      "AllowAccessWithNotHashedId": false,
      "Salt": "ASalt-Value-7CD02CB1-0213-43FE-8737-07DE403DAD39"
    },
    "Secret": "0B4EFF89-A0BA-46DA-906B-D3A6AFE04EB3"
  },
  "CognitiveServices": {
    "OpenAi": {
      "ApiKey": "",
      "Model": "gpt-4"
    },
    "Translation": {
      "Key": "7272893",
      "TextTranslationEndpoint": "https://api.cognitive.microsofttranslator.com/",
      "DocumentTranslationEndpoint": "https://sw-translate.cognitiveservices.azure.com/",
      "Region": "germanywestcentral"
    }
  },
  "ApiDocumentation": {
    "RequireLogin": true,
    "RequirePermission": true,
    "Title": "Coworkee Web API",
    "Description": "API to use Coworkee",
    "Contact": {
      "Name": "Florian Gilde",
      "Email": "info@gilde.org",
      "Url": "http://www.gilde.org"
    },
    "License": {
      "Name": "MIT License",
      "spdx_id": "MIT",
      "Url": "https://api.github.com/licenses/mit"
    }
  },
  "MailConfiguration": {
    "SendGridApiKey": "<your-key>", 
    "From": "info@coworkee.de",
    "Host": "smtp.ethereal.email",
    "Port": 587,
    "UserName": "ed.padberg5@ethereal.email",
    "Password": "3FbXEW6DxhgyhqRvKW",
    "DisplayName": "Florian Gilde"
  },
  "BackupOptions": {
    "BucketName": ""
  }
}