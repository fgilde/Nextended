using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;
using Nextended.CodeGen.Attributes;
using Nextended.CodeGen.Enums;
using Nextended.Core.Attributes;

namespace CodeGenSample;

public interface IItem{}

public class SuperBase
{
    public void Dispose()
    {
        
    }
}

[AutoGenerateDto(ExplicitGenericImplementationTypes = ["string", "int"], ClassModifier = Modifier.Internal, BaseType = "CodeGenSample.SuperBase", Interfaces = ["System.IDisposable", "CodeGenSample.IItem"])]
public class GenericItem<T, T2> where T : class where T2 : struct
{
    public T Value { get; set; }
    public T2 Id { get; set; }
}


[AutoGenerateCom]
public class SomethingThatHurts
{
    public string Name { get; set; }

    public string Secret { get; set; }
}

[JsonNumberHandling(JsonNumberHandling.AllowReadingFromString)]
[AutoGenerateDto(Prefix = "My", Suffix = "Dto", IsComCompatible = false, 
    KeepAttributesOnGeneratedClass = true, 
    DefaultPropertyInterfaceAccess = InterfaceProperty.Get,
    KeepPropertyAttributesOnGeneratedClass = true, 
    KeepPropertyAttributesOnGeneratedInterface = true)]
public class User
{
    [MaxLength(3)]

    public string Name { get; set; }
    
    [IgnoreOnGeneration] 
    public string SecretDb { get; set; }
    
    [GenerationPropertySetting(PropertyName = "ThatUserAddress" //, Type = typeof(string)
    )]
    public Address Address { get; set; }
    
    [GenerationPropertySetting(PropertyName = "UserLevel", InterfaceAccess = InterfaceProperty.GetAndSet)]
    public UserLevel? Level { get; set; }
}


[AutoGenerateDto(ToDtoMethodName = "ToMegaDto", ToSourceMethodName = "AsSrc", IsComCompatible = true)]
public class Address
{
    public string Street { get; set; }
    public string City { get; set; }
    public string Country { get; set; }
}

[AutoGenerateDto (IsComCompatible = true, ToSourceMethodName = "Enumbadse")]
public enum UserLevel
{
    Guest,
    User,
    Admin,
    [IgnoreOnGeneration]
    ServerAdmin,
}


public interface IInterface
{
    public string YG => "You got it!";
}