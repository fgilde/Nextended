using System.Collections.Generic;
using System.Linq;
using Microsoft.CodeAnalysis;
using Microsoft.CodeAnalysis.CSharp;
using Microsoft.CodeAnalysis.CSharp.Syntax;
using Nextended.CodeGen.Contracts;

namespace Nextended.CodeGen.Generators.MappingGeneration
{
    public class MappingGenerator : ISourceSubGenerator
    {
        public bool RequireConfig => false;

        public IEnumerable<GeneratedFile> Execute(GenerationContext context)
        {
            System.Console.WriteLine("MappingGenerator.Execute called");
            
            // Always generate a simple test file to prove the generator works
            var testCode = @"// <auto-generated />
using System;

namespace Nextended.Core.Generated
{
    public static class TestMappingExtensions
    {
        public static string GetGeneratorTest()
        {
            return ""MappingGenerator is working!"";
        }
    }
}";
            
            yield return new GeneratedFile("TestMappingExtensions.g.cs", "Nextended.Core.Generated", testCode);
            System.Console.WriteLine("MappingGenerator generated TestMappingExtensions.g.cs");
        }
    }
}